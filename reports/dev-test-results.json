{
  "config": {
    "configFile": "/Users/Anand/github/playwright-api-test/playwright.config.js",
    "rootDir": "/Users/Anand/github/playwright-api-test/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": "/Users/Anand/github/playwright-api-test/utils/globalTeardown.ts",
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 4
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "reports/dev-html-report",
          "open": "never"
        }
      ],
      [
        "json",
        {
          "outputFile": "reports/dev-test-results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "reports/dev-junit-results.xml"
        }
      ],
      [
        "/Users/Anand/github/playwright-api-test/utils/customReporter.ts",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/Anand/github/playwright-api-test/test-results/dev",
        "repeatEach": 1,
        "retries": 3,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "dev-api-tests",
        "name": "dev-api-tests",
        "testDir": "/Users/Anand/github/playwright-api-test/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/Anand/github/playwright-api-test/test-results/dev",
        "repeatEach": 1,
        "retries": 3,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "dev-api-tests-debug",
        "name": "dev-api-tests-debug",
        "testDir": "/Users/Anand/github/playwright-api-test/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/Anand/github/playwright-api-test/test-results/dev",
        "repeatEach": 1,
        "retries": 3,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "dev-performance-tests",
        "name": "dev-performance-tests",
        "testDir": "/Users/Anand/github/playwright-api-test/tests",
        "testIgnore": [],
        "testMatch": [
          "**/performance-*.spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/Anand/github/playwright-api-test/test-results/dev",
        "repeatEach": 1,
        "retries": 3,
        "metadata": {
          "actualWorkers": 4
        },
        "id": "dev-security-tests",
        "name": "dev-security-tests",
        "testDir": "/Users/Anand/github/playwright-api-test/tests",
        "testIgnore": [],
        "testMatch": [
          "**/security-*.spec.ts"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.54.2",
    "workers": 4,
    "webServer": null
  },
  "suites": [
    {
      "title": "advanced/chained-test-clean.spec.ts",
      "file": "advanced/chained-test-clean.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Chained Test Flow - User Registration to Profile Management",
          "file": "advanced/chained-test-clean.spec.ts",
          "line": 21,
          "column": 15,
          "specs": [
            {
              "title": "Step 1: should register user and generate authentication tokens @smoke @chain",
              "ok": false,
              "tags": [
                "smoke",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.223Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.196Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-test-clea-65c1b-tication-tokens-smoke-chain-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 6,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.607Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.585Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-test-clea-65c1b-tication-tokens-smoke-chain-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.966Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.943Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-test-clea-65c1b-tication-tokens-smoke-chain-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 15,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-test-clean.spec.ts:67:43\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.340Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.318Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-test-clea-65c1b-tication-tokens-smoke-chain-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-d00416201b38f20072fe",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 54,
              "column": 7
            },
            {
              "title": "Step 2: should access user profile with authentication token @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.246Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.626Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.987Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.359Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-e4514824ed1eaa4d981f",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 101,
              "column": 7
            },
            {
              "title": "Step 3: should update profile with authenticated session @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.246Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.626Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.987Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.360Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-575111a7ef23363cb8da",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 141,
              "column": 7
            },
            {
              "title": "Step 4: should verify complete user journey and cleanup session @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.246Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.626Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.987Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.360Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-fb56394eb4939bec0551",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 183,
              "column": 7
            },
            {
              "title": "Step 1: should register user and generate authentication tokens @smoke @chain",
              "ok": true,
              "tags": [
                "smoke",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-d746cea52408f527fe10",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 54,
              "column": 7
            },
            {
              "title": "Step 2: should access user profile with authentication token @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-e600b24491f899bed932",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 101,
              "column": 7
            },
            {
              "title": "Step 3: should update profile with authenticated session @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-91ea2e8a20191d60a058",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 141,
              "column": 7
            },
            {
              "title": "Step 4: should verify complete user journey and cleanup session @regression @chain",
              "ok": true,
              "tags": [
                "regression",
                "chain"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "cde2b5569c977a1fd2a9-ea39c6b401ea7fac7a10",
              "file": "advanced/chained-test-clean.spec.ts",
              "line": 183,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/chained-tests.spec.ts",
      "file": "advanced/chained-tests.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "🔗 Chained Test Scenarios",
          "file": "advanced/chained-tests.spec.ts",
          "line": 25,
          "column": 6,
          "specs": [
            {
              "title": "should execute complete user journey chain with token passing @smoke @chained",
              "ok": false,
              "tags": [
                "smoke",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 16,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                          "column": 54,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                            "column": 54,
                            "line": 66
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n\n\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting complete user journey chained test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.213Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--d15e8-token-passing-smoke-chained-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                        "column": 54,
                        "line": 66
                      }
                    },
                    {
                      "workerIndex": 7,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 13,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                          "column": 54,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                            "column": 54,
                            "line": 66
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n\n\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting complete user journey chained test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.578Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--d15e8-token-passing-smoke-chained-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                        "column": 54,
                        "line": 66
                      }
                    },
                    {
                      "workerIndex": 8,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 14,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                          "column": 54,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                            "column": 54,
                            "line": 66
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n\n\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting complete user journey chained test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.945Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--d15e8-token-passing-smoke-chained-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                        "column": 54,
                        "line": 66
                      }
                    },
                    {
                      "workerIndex": 12,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 21,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                          "column": 54,
                          "line": 66
                        },
                        "snippet": "\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                            "column": 54,
                            "line": 66
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'userJourney')\n\n\u001b[0m \u001b[90m 64 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'🚀 Starting complete user journey chained test'\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m 65 |\u001b[39m     \n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 66 |\u001b[39m     \u001b[36mconst\u001b[39m userJourneyData \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mchainedTestData\u001b[33m.\u001b[39muserJourney\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 67 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m'👤 User Journey Data:'\u001b[39m\u001b[33m,\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mstringify(userJourneyData\u001b[33m,\u001b[39m \u001b[36mnull\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m))\u001b[33m;\u001b[39m\n \u001b[90m 68 |\u001b[39m     \n \u001b[90m 69 |\u001b[39m     \u001b[36mconst\u001b[39m chainedSteps \u001b[33m=\u001b[39m [\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:66:54\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting complete user journey chained test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.299Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--d15e8-token-passing-smoke-chained-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts",
                        "column": 54,
                        "line": 66
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e03854d94b810dea189c-9b99afa088ebb4059833",
              "file": "advanced/chained-tests.spec.ts",
              "line": 63,
              "column": 7
            },
            {
              "title": "should execute authenticated API operations chain with token management @regression @chained",
              "ok": false,
              "tags": [
                "regression",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 20,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting authenticated API operations chain\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.209Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.197Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--93d26-nagement-regression-chained-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 4,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 19,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting authenticated API operations chain\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.589Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.577Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--93d26-nagement-regression-chained-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 10,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 18,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting authenticated API operations chain\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.960Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.949Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--93d26-nagement-regression-chained-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 14,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 17,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:251:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting authenticated API operations chain\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.320Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.308Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--93d26-nagement-regression-chained-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e03854d94b810dea189c-ad5cc49206929d176dd4",
              "file": "advanced/chained-tests.spec.ts",
              "line": 247,
              "column": 7
            },
            {
              "title": "should handle error recovery in chained operations @regression @chained",
              "ok": false,
              "tags": [
                "regression",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 19,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting error recovery chain test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.217Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:41.205Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--161e6-erations-regression-chained-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 5,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 17,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting error recovery chain test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.589Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:41.578Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--161e6-erations-regression-chained-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 9,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 16,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting error recovery chain test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:41.957Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:41.948Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--161e6-erations-regression-chained-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 18,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/chained-tests.spec.ts:418:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting error recovery chain test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.332Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:42.321Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-chained-tests-🔗--161e6-erations-regression-chained-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "e03854d94b810dea189c-3ec48a68b090fe427e81",
              "file": "advanced/chained-tests.spec.ts",
              "line": 415,
              "column": 7
            },
            {
              "title": "should execute complete user journey chain with token passing @smoke @chained",
              "ok": true,
              "tags": [
                "smoke",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e03854d94b810dea189c-cb5d19ee3adea9dbe346",
              "file": "advanced/chained-tests.spec.ts",
              "line": 63,
              "column": 7
            },
            {
              "title": "should execute authenticated API operations chain with token management @regression @chained",
              "ok": true,
              "tags": [
                "regression",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e03854d94b810dea189c-1c82fb1128b3c828879c",
              "file": "advanced/chained-tests.spec.ts",
              "line": 247,
              "column": 7
            },
            {
              "title": "should handle error recovery in chained operations @regression @chained",
              "ok": true,
              "tags": [
                "regression",
                "chained"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "e03854d94b810dea189c-ae709a39e650a82cd089",
              "file": "advanced/chained-tests.spec.ts",
              "line": 415,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/data-driven-clean.spec.ts",
      "file": "advanced/data-driven-clean.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Data-Driven User Profile Tests",
          "file": "advanced/data-driven-clean.spec.ts",
          "line": 21,
          "column": 6,
          "specs": [
            {
              "title": "should create and validate multiple user profiles with different data sets @regression",
              "ok": false,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 13,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.690Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:42.662Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-28906-ferent-data-sets-regression-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 21,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.023Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:43.004Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-28906-ferent-data-sets-regression-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 24,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 7,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.387Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:43.366Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-28906-ferent-data-sets-regression-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 27,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:57:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.716Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:43.696Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-28906-ferent-data-sets-regression-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a7f197228e214e740431-ff6f4d712d8535582330",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "should authenticate multiple users with different credential sets @regression",
              "ok": false,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 11,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.690Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:42.666Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-2a444--credential-sets-regression-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 22,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 8,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.031Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:43.013Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-2a444--credential-sets-regression-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 25,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.395Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:43.375Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-2a444--credential-sets-regression-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 28,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 9,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:99:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.716Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:43.697Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-2a444--credential-sets-regression-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a7f197228e214e740431-5c50ad7503634f971c16",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 82,
              "column": 7
            },
            {
              "title": "should update user profiles with various data combinations @regression",
              "ok": false,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1458,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m500\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m500\u001b[39m\n    at Object.assertSuccessResponse (/Users/Anand/github/playwright-api-test/utils/testFixtures.ts:241:33)\n    at TestActions.updateUserProfile (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:195:20)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:143:7",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/testFixtures.ts",
                          "column": 33,
                          "line": 241
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/testFixtures.ts:241\n\n\u001b[0m \u001b[90m 239 |\u001b[39m       assertSuccessResponse(response\u001b[33m:\u001b[39m \u001b[33mApiHelperResponse\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\n \u001b[90m 240 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 241 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 242 |\u001b[39m       }\u001b[33m,\u001b[39m\n \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m       assertErrorResponse(response\u001b[33m:\u001b[39m \u001b[33mApiHelperResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatus\u001b[33m:\u001b[39m number)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/testFixtures.ts",
                            "column": 33,
                            "line": 241
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m300\u001b[39m\nReceived:   \u001b[31m500\u001b[39m\n\n\u001b[90m   at \u001b[39m../utils/testFixtures.ts:241\n\n\u001b[0m \u001b[90m 239 |\u001b[39m       assertSuccessResponse(response\u001b[33m:\u001b[39m \u001b[33mApiHelperResponse\u001b[39m)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\n \u001b[90m 240 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBeGreaterThanOrEqual(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 241 |\u001b[39m         expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m300\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 242 |\u001b[39m       }\u001b[33m,\u001b[39m\n \u001b[90m 243 |\u001b[39m\n \u001b[90m 244 |\u001b[39m       assertErrorResponse(response\u001b[33m:\u001b[39m \u001b[33mApiHelperResponse\u001b[39m\u001b[33m,\u001b[39m expectedStatus\u001b[33m:\u001b[39m number)\u001b[33m:\u001b[39m \u001b[36mvoid\u001b[39m {\u001b[0m\n\u001b[2m    at Object.assertSuccessResponse (/Users/Anand/github/playwright-api-test/utils/testFixtures.ts:241:33)\u001b[22m\n\u001b[2m    at TestActions.updateUserProfile (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:195:20)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:143:7\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.705Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "[2025-08-12T23:28:42.705Z] 👤 Creating test user: Test User\n"
                        },
                        {
                          "text": "\n================================================================================\n📤 HTTP REQUEST\n================================================================================\n🧪 Test Case: should update user profiles with various data combinations @regression\n📍 Test Step: Create Test User\n🌐 Method: POST\n🔗 URL: https://jsonplaceholder.typicode.com/users\n⏰ Timestamp: 2025-08-12T23:28:42.705Z\n🏷️  Test ID: 4d3a05e2-a9f3-474b-91f7-68347e7e7137\n🎭 Scenario: User Registration\n\n📋 Request Headers:\n{}\n\n📤 Request Body:\n{\n  \"name\": \"Test User\",\n  \"username\": \"user_1755041322705\",\n  \"email\": \"test1755041322705@example.com\",\n  \"phone\": \"+1234567890\",\n  \"website\": \"https://example.com\",\n  \"address\": {\n    \"street\": \"123 Test St\",\n    \"city\": \"Test City\",\n    \"state\": \"Test State\",\n    \"zipCode\": \"12345\",\n    \"country\": \"Test Country\"\n  },\n  \"company\": {\n    \"name\": \"Test Company\",\n    \"department\": \"Engineering\",\n    \"jobTitle\": \"Software Developer\"\n  }\n}\n================================================================================\n\n"
                        },
                        {
                          "text": "{\n  \"timestamp\": \"23:28:42.705\",\n  \"level\": \"debug\",\n  \"message\": \"🔄 API Request\",\n  \"type\": \"api_request\",\n  \"testCase\": \"should update user profiles with various data combinations @regression\",\n  \"testStep\": \"Create Test User\",\n  \"method\": \"POST\",\n  \"url\": \"https://jsonplaceholder.typicode.com/users\",\n  \"headers\": {},\n  \"body\": {\n    \"name\": \"Test User\",\n    \"username\": \"user_1755041322705\",\n    \"email\": \"test1755041322705@example.com\",\n    \"phone\": \"+1234567890\",\n    \"website\": \"https://example.com\",\n    \"address\": {\n      \"street\": \"123 Test St\",\n      \"city\": \"Test City\",\n      \"state\": \"Test State\",\n      \"zipCode\": \"12345\",\n      \"country\": \"Test Country\"\n    },\n    \"company\": {\n      \"name\": \"Test Company\",\n      \"department\": \"Engineering\",\n      \"jobTitle\": \"Software Developer\"\n    }\n  },\n  \"testId\": \"4d3a05e2-a9f3-474b-91f7-68347e7e7137\",\n  \"scenarioName\": \"User Registration\"\n}\n"
                        },
                        {
                          "text": "\n================================================================================\n📥 HTTP RESPONSE\n================================================================================\n🧪 Test Case: should update user profiles with various data combinations @regression\n📍 Test Step: Create Test User\n📊 Status: 201 Created\n⏱️  Response Time: 751ms\n⏰ Timestamp: 2025-08-12T23:28:43.457Z\n🏷️  Test ID: 4d3a05e2-a9f3-474b-91f7-68347e7e7137\n🎭 Scenario: User Registration\n\n📋 Response Headers:\n{\n  \"date\": \"Tue, 12 Aug 2025 23:28:43 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"452\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-credentials\": \"true\",\n  \"access-control-expose-headers\": \"Location\",\n  \"cache-control\": \"no-cache\",\n  \"etag\": \"W/\\\"1c4-8RW+mumCpGtP7lWHXMpzexaXV+c\\\"\",\n  \"expires\": \"-1\",\n  \"location\": \"https://jsonplaceholder.typicode.com/users/11\",\n  \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n  \"pragma\": \"no-cache\",\n  \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=K8V6ItSbd7z3opbSNMR6BifCEPNmbLOxl0SbqNqCLOQ%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755041323\\\"}],\\\"max_age\\\":3600}\",\n  \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=K8V6ItSbd7z3opbSNMR6BifCEPNmbLOxl0SbqNqCLOQ%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755041323\\\"\",\n  \"server\": \"cloudflare\",\n  \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n  \"via\": \"2.0 heroku-router\",\n  \"x-content-type-options\": \"nosniff\",\n  \"x-powered-by\": \"Express\",\n  \"x-ratelimit-limit\": \"1000\",\n  \"x-ratelimit-remaining\": \"999\",\n  \"x-ratelimit-reset\": \"1755041357\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"cf-ray\": \"96e3c02bad4c90a0-MEL\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n}\n\n📥 Response Body:\n{\n  \"name\": \"Test User\",\n  \"username\": \"user_1755041322705\",\n  \"email\": \"test1755041322705@example.com\",\n  \"phone\": \"+1234567890\",\n  \"website\": \"https://example.com\",\n  \"address\": {\n    \"street\": \"123 Test St\",\n    \"city\": \"Test City\",\n    \"state\": \"Test State\",\n    \"zipCode\": \"12345\",\n    \"country\": \"Test Country\"\n  },\n  \"company\": {\n    \"name\": \"Test Company\",\n    \"department\": \"Engineering\",\n    \"jobTitle\": \"Software Developer\"\n  },\n  \"id\": 11\n}\n================================================================================\n\n"
                        },
                        {
                          "text": "{\n  \"timestamp\": \"23:28:43.457\",\n  \"level\": \"debug\",\n  \"message\": \"✅ API Response\",\n  \"type\": \"api_response\",\n  \"testCase\": \"should update user profiles with various data combinations @regression\",\n  \"testStep\": \"Create Test User\",\n  \"status\": 201,\n  \"statusText\": \"Created\",\n  \"headers\": {\n    \"date\": \"Tue, 12 Aug 2025 23:28:43 GMT\",\n    \"content-type\": \"application/json; charset=utf-8\",\n    \"content-length\": \"452\",\n    \"connection\": \"keep-alive\",\n    \"access-control-allow-credentials\": \"true\",\n    \"access-control-expose-headers\": \"Location\",\n    \"cache-control\": \"no-cache\",\n    \"etag\": \"W/\\\"1c4-8RW+mumCpGtP7lWHXMpzexaXV+c\\\"\",\n    \"expires\": \"-1\",\n    \"location\": \"https://jsonplaceholder.typicode.com/users/11\",\n    \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n    \"pragma\": \"no-cache\",\n    \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=K8V6ItSbd7z3opbSNMR6BifCEPNmbLOxl0SbqNqCLOQ%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755041323\\\"}],\\\"max_age\\\":3600}\",\n    \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=K8V6ItSbd7z3opbSNMR6BifCEPNmbLOxl0SbqNqCLOQ%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755041323\\\"\",\n    \"server\": \"cloudflare\",\n    \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n    \"via\": \"2.0 heroku-router\",\n    \"x-content-type-options\": \"nosniff\",\n    \"x-powered-by\": \"Express\",\n    \"x-ratelimit-limit\": \"1000\",\n    \"x-ratelimit-remaining\": \"999\",\n    \"x-ratelimit-reset\": \"1755041357\",\n    \"cf-cache-status\": \"DYNAMIC\",\n    \"cf-ray\": \"96e3c02bad4c90a0-MEL\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n  },\n  \"body\": {\n    \"name\": \"Test User\",\n    \"username\": \"user_1755041322705\",\n    \"email\": \"test1755041322705@example.com\",\n    \"phone\": \"+1234567890\",\n    \"website\": \"https://example.com\",\n    \"address\": {\n      \"street\": \"123 Test St\",\n      \"city\": \"Test City\",\n      \"state\": \"Test State\",\n      \"zipCode\": \"12345\",\n      \"country\": \"Test Country\"\n    },\n    \"company\": {\n      \"name\": \"Test Company\",\n      \"department\": \"Engineering\",\n      \"jobTitle\": \"Software Developer\"\n    },\n    \"id\": 11\n  },\n  \"responseTime\": 751,\n  \"testId\": \"4d3a05e2-a9f3-474b-91f7-68347e7e7137\",\n  \"scenarioName\": \"User Registration\"\n}\n"
                        },
                        {
                          "text": "[2025-08-12T23:28:43.457Z] ✅ User created with ID: 11\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Update User Profile\n⏰ Step Started: 2025-08-12T23:28:43.457Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n================================================================================\n📤 HTTP REQUEST\n================================================================================\n🧪 Test Case: should update user profiles with various data combinations @regression\n📍 Test Step: Update User Profile\n🌐 Method: PUT\n🔗 URL: https://jsonplaceholder.typicode.com/users/11\n⏰ Timestamp: 2025-08-12T23:28:43.457Z\n🏷️  Test ID: 4d3a05e2-a9f3-474b-91f7-68347e7e7137\n🎭 Scenario: Profile Update\n\n📋 Request Headers:\n{}\n\n📤 Request Body:\n{\n  \"fullName\": \"John Smith\",\n  \"website\": \"https://johnsmith.dev\",\n  \"phone\": \"+1-555-0101\"\n}\n================================================================================\n\n"
                        },
                        {
                          "text": "{\n  \"timestamp\": \"23:28:43.457\",\n  \"level\": \"debug\",\n  \"message\": \"🔄 API Request\",\n  \"type\": \"api_request\",\n  \"testCase\": \"should update user profiles with various data combinations @regression\",\n  \"testStep\": \"Update User Profile\",\n  \"method\": \"PUT\",\n  \"url\": \"https://jsonplaceholder.typicode.com/users/11\",\n  \"headers\": {},\n  \"body\": {\n    \"fullName\": \"John Smith\",\n    \"website\": \"https://johnsmith.dev\",\n    \"phone\": \"+1-555-0101\"\n  },\n  \"testId\": \"4d3a05e2-a9f3-474b-91f7-68347e7e7137\",\n  \"scenarioName\": \"Profile Update\"\n}\n"
                        },
                        {
                          "text": "\n================================================================================\n📥 HTTP RESPONSE\n================================================================================\n🧪 Test Case: should update user profiles with various data combinations @regression\n📍 Test Step: Update User Profile\n📊 Status: 500 Internal Server Error\n⏱️  Response Time: 693ms\n⏰ Timestamp: 2025-08-12T23:28:44.151Z\n🏷️  Test ID: 4d3a05e2-a9f3-474b-91f7-68347e7e7137\n🎭 Scenario: Profile Update\n\n📋 Response Headers:\n{\n  \"date\": \"Tue, 12 Aug 2025 23:28:44 GMT\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"819\",\n  \"connection\": \"keep-alive\",\n  \"access-control-allow-credentials\": \"true\",\n  \"cache-control\": \"no-cache\",\n  \"etag\": \"W/\\\"333-hUw8JUX24BjghGOYHTH5xx+nCFo\\\"\",\n  \"expires\": \"-1\",\n  \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n  \"pragma\": \"no-cache\",\n  \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=tS3hSs3fVZUBX%2BfMi%2BDoL8n8pro2x8s939A9F7YX8qg%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755041324\\\"}],\\\"max_age\\\":3600}\",\n  \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=tS3hSs3fVZUBX%2BfMi%2BDoL8n8pro2x8s939A9F7YX8qg%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755041324\\\"\",\n  \"server\": \"cloudflare\",\n  \"vary\": \"Origin, Accept-Encoding\",\n  \"via\": \"2.0 heroku-router\",\n  \"x-powered-by\": \"Express\",\n  \"x-ratelimit-limit\": \"1000\",\n  \"x-ratelimit-remaining\": \"998\",\n  \"x-ratelimit-reset\": \"1755041357\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"cf-ray\": \"96e3c02fefb190a0-MEL\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n}\n\n📥 Response Body:\n\"TypeError: Cannot read properties of undefined (reading 'id')\\n    at update (/app/node_modules/json-server/lib/server/router/plural.js:262:24)\\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\\n    at next (/app/node_modules/express/lib/router/route.js:137:13)\\n    at next (/app/node_modules/express/lib/router/route.js:131:14)\\n    at Route.dispatch (/app/node_modules/express/lib/router/route.js:112:3)\\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\\n    at /app/node_modules/express/lib/router/index.js:281:22\\n    at param (/app/node_modules/express/lib/router/index.js:354:14)\\n    at param (/app/node_modules/express/lib/router/index.js:365:14)\\n    at Function.process_params (/app/node_modules/express/lib/router/index.js:410:3)\"\n================================================================================\n\n"
                        },
                        {
                          "text": "{\n  \"timestamp\": \"23:28:44.151\",\n  \"level\": \"debug\",\n  \"message\": \"✅ API Response\",\n  \"type\": \"api_response\",\n  \"testCase\": \"should update user profiles with various data combinations @regression\",\n  \"testStep\": \"Update User Profile\",\n  \"status\": 500,\n  \"statusText\": \"Internal Server Error\",\n  \"headers\": {\n    \"date\": \"Tue, 12 Aug 2025 23:28:44 GMT\",\n    \"content-type\": \"text/html; charset=utf-8\",\n    \"content-length\": \"819\",\n    \"connection\": \"keep-alive\",\n    \"access-control-allow-credentials\": \"true\",\n    \"cache-control\": \"no-cache\",\n    \"etag\": \"W/\\\"333-hUw8JUX24BjghGOYHTH5xx+nCFo\\\"\",\n    \"expires\": \"-1\",\n    \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n    \"pragma\": \"no-cache\",\n    \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=tS3hSs3fVZUBX%2BfMi%2BDoL8n8pro2x8s939A9F7YX8qg%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755041324\\\"}],\\\"max_age\\\":3600}\",\n    \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=tS3hSs3fVZUBX%2BfMi%2BDoL8n8pro2x8s939A9F7YX8qg%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755041324\\\"\",\n    \"server\": \"cloudflare\",\n    \"vary\": \"Origin, Accept-Encoding\",\n    \"via\": \"2.0 heroku-router\",\n    \"x-powered-by\": \"Express\",\n    \"x-ratelimit-limit\": \"1000\",\n    \"x-ratelimit-remaining\": \"998\",\n    \"x-ratelimit-reset\": \"1755041357\",\n    \"cf-cache-status\": \"DYNAMIC\",\n    \"cf-ray\": \"96e3c02fefb190a0-MEL\",\n    \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n  },\n  \"body\": \"TypeError: Cannot read properties of undefined (reading 'id')\\n    at update (/app/node_modules/json-server/lib/server/router/plural.js:262:24)\\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\\n    at next (/app/node_modules/express/lib/router/route.js:137:13)\\n    at next (/app/node_modules/express/lib/router/route.js:131:14)\\n    at Route.dispatch (/app/node_modules/express/lib/router/route.js:112:3)\\n    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\\n    at /app/node_modules/express/lib/router/index.js:281:22\\n    at param (/app/node_modules/express/lib/router/index.js:354:14)\\n    at param (/app/node_modules/express/lib/router/index.js:365:14)\\n    at Function.process_params (/app/node_modules/express/lib/router/index.js:410:3)\",\n  \"responseTime\": 693,\n  \"testId\": \"4d3a05e2-a9f3-474b-91f7-68347e7e7137\",\n  \"scenarioName\": \"Profile Update\"\n}\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:42.675Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-71305-ata-combinations-regression-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/testFixtures.ts",
                        "column": 33,
                        "line": 241
                      }
                    },
                    {
                      "workerIndex": 34,
                      "parallelIndex": 0,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:44.478Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-71305-ata-combinations-regression-dev-api-tests-retry1/trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a7f197228e214e740431-2484072c413de3510dee",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 126,
              "column": 7
            },
            {
              "title": "should create and validate multiple user profiles with different data sets @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a7f197228e214e740431-c55d0b5a233291643da9",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "should authenticate multiple users with different credential sets @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a7f197228e214e740431-81db171b3a573efafe4f",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 82,
              "column": 7
            },
            {
              "title": "should update user profiles with various data combinations @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a7f197228e214e740431-8cc931013db417ed3ef5",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 126,
              "column": 7
            }
          ]
        },
        {
          "title": "Bulk Operations Testing",
          "file": "advanced/data-driven-clean.spec.ts",
          "line": 157,
          "column": 6,
          "specs": [
            {
              "title": "should handle multiple concurrent user operations @performance",
              "ok": false,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 19,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.665Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.666Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.666Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.666Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:42.666Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:42.654Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-0ffdf-user-operations-performance-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 20,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.007Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.007Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.007Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.007Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.007Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:42.998Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-0ffdf-user-operations-performance-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 23,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.370Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.370Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.370Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.370Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.370Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-08-12T23:28:43.360Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-0ffdf-user-operations-performance-dev-api-tests-retry2/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 26,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-clean.spec.ts:188:45\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.689Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.689Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.689Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.689Z\n────────────────────────────────────────────────────────────\n\n\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:43.689Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 3,
                      "startTime": "2025-08-12T23:28:43.679Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-clean-0ffdf-user-operations-performance-dev-api-tests-retry3/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "a7f197228e214e740431-3feebb331ab46f6d41db",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 174,
              "column": 7
            },
            {
              "title": "should handle multiple concurrent user operations @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a7f197228e214e740431-e7cff30556d90f9b4043",
              "file": "advanced/data-driven-clean.spec.ts",
              "line": 174,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/data-driven-tests.spec.ts",
      "file": "advanced/data-driven-tests.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "📊 Data-Driven Test Scenarios",
          "file": "advanced/data-driven-tests.spec.ts",
          "line": 24,
          "column": 6,
          "specs": [
            {
              "title": "should execute multiple user registration scenarios with for loop validation @regression @data-driven",
              "ok": false,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 15,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'length')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'length')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:63:83",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                          "column": 83,
                          "line": 63
                        },
                        "snippet": "\u001b[0m \u001b[90m 61 |\u001b[39m     \n \u001b[90m 62 |\u001b[39m     \u001b[36mconst\u001b[39m registrationScenarios \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mdataSetTests\u001b[33m.\u001b[39mmultipleUserRegistrations\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`📊 Total registration scenarios to test: ${registrationScenarios.length}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 64 |\u001b[39m     \n \u001b[90m 65 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m advancedUtils\u001b[33m.\u001b[39mexecuteDataDrivenTest(\n \u001b[90m 66 |\u001b[39m       registrationScenarios\u001b[33m,\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                            "column": 83,
                            "line": 63
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'length')\n\n\u001b[0m \u001b[90m 61 |\u001b[39m     \n \u001b[90m 62 |\u001b[39m     \u001b[36mconst\u001b[39m registrationScenarios \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mdataSetTests\u001b[33m.\u001b[39mmultipleUserRegistrations\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`📊 Total registration scenarios to test: ${registrationScenarios.length}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 64 |\u001b[39m     \n \u001b[90m 65 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m advancedUtils\u001b[33m.\u001b[39mexecuteDataDrivenTest(\n \u001b[90m 66 |\u001b[39m       registrationScenarios\u001b[33m,\u001b[39m\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:63:83\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting multiple user registration data-driven test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:44.002Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-tests-6610e-tion-regression-data-driven-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                        "column": 83,
                        "line": 63
                      }
                    },
                    {
                      "workerIndex": 32,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 12,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'length')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'length')\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:63:83",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                          "column": 83,
                          "line": 63
                        },
                        "snippet": "\u001b[0m \u001b[90m 61 |\u001b[39m     \n \u001b[90m 62 |\u001b[39m     \u001b[36mconst\u001b[39m registrationScenarios \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mdataSetTests\u001b[33m.\u001b[39mmultipleUserRegistrations\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`📊 Total registration scenarios to test: ${registrationScenarios.length}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 64 |\u001b[39m     \n \u001b[90m 65 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m advancedUtils\u001b[33m.\u001b[39mexecuteDataDrivenTest(\n \u001b[90m 66 |\u001b[39m       registrationScenarios\u001b[33m,\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                            "column": 83,
                            "line": 63
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'length')\n\n\u001b[0m \u001b[90m 61 |\u001b[39m     \n \u001b[90m 62 |\u001b[39m     \u001b[36mconst\u001b[39m registrationScenarios \u001b[33m=\u001b[39m testData\u001b[33m.\u001b[39mdataSetTests\u001b[33m.\u001b[39mmultipleUserRegistrations\u001b[33m;\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 63 |\u001b[39m     console\u001b[33m.\u001b[39mlog(\u001b[32m`📊 Total registration scenarios to test: ${registrationScenarios.length}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 64 |\u001b[39m     \n \u001b[90m 65 |\u001b[39m     \u001b[36mconst\u001b[39m results \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m advancedUtils\u001b[33m.\u001b[39mexecuteDataDrivenTest(\n \u001b[90m 66 |\u001b[39m       registrationScenarios\u001b[33m,\u001b[39m\u001b[0m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:63:83\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting multiple user registration data-driven test\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:44.323Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-tests-6610e-tion-regression-data-driven-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts",
                        "column": 83,
                        "line": 63
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-56f35339f0db327dad7e",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 59,
              "column": 7
            },
            {
              "title": "should execute bulk profile update scenarios with validation @regression @data-driven",
              "ok": false,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 14,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:157:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:157:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting bulk profile update data-driven test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:44.036Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:44.026Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-tests-238d5-tion-regression-data-driven-dev-api-tests/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    },
                    {
                      "workerIndex": 33,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 13,
                      "error": {
                        "message": "TypeError: Cannot read properties of undefined (reading 'fullName')",
                        "stack": "TypeError: Cannot read properties of undefined (reading 'fullName')\n    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\n    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:157:40",
                        "location": {
                          "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                          "column": 55,
                          "line": 80
                        },
                        "snippet": "\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                            "column": 55,
                            "line": 80
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'fullName')\n\n\u001b[90m   at \u001b[39m../utils/test-actions.ts:80\n\n\u001b[0m \u001b[90m 78 |\u001b[39m     \n \u001b[90m 79 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogConfig\u001b[33m.\u001b[39menableFullLogs) {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 80 |\u001b[39m       logToConsole(\u001b[32m`👤 Creating test user: ${testUser.fullName}`\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 81 |\u001b[39m     }\n \u001b[90m 82 |\u001b[39m     \n \u001b[90m 83 |\u001b[39m     \u001b[36mconst\u001b[39m registrationResult \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mapiHelper\u001b[33m.\u001b[39mregisterUser(testUser)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[2m    at TestActions.createTestUser (/Users/Anand/github/playwright-api-test/utils/test-actions.ts:80:55)\u001b[22m\n\u001b[2m    at /Users/Anand/github/playwright-api-test/tests/advanced/data-driven-tests.spec.ts:157:40\u001b[22m"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "🚀 Starting bulk profile update data-driven test\n"
                        },
                        {
                          "text": "\n📍 TEST STEP: Create Test User\n⏰ Step Started: 2025-08-12T23:28:44.354Z\n────────────────────────────────────────────────────────────\n\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-08-12T23:28:44.344Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-tests-238d5-tion-regression-data-driven-dev-api-tests-retry1/trace.zip"
                        }
                      ],
                      "errorLocation": {
                        "file": "/Users/Anand/github/playwright-api-test/utils/test-actions.ts",
                        "column": 55,
                        "line": 80
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-120bc3322c133e624bd5",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "should validate data consistency across different formats @regression @data-driven",
              "ok": true,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 3,
                      "status": "interrupted",
                      "duration": 372,
                      "errors": [],
                      "stdout": [
                        {
                          "text": "🚀 Starting cross-platform data validation test\n"
                        },
                        {
                          "text": "🔄 Starting data-driven test: Cross-Platform Data Validation\n"
                        },
                        {
                          "text": "📊 Total scenarios to execute: 3\n"
                        },
                        {
                          "text": "\n🧪 Executing scenario 1/3:\n"
                        },
                        {
                          "text": "   Test Case: Scenario 1\n"
                        },
                        {
                          "text": "\n🧪 Testing format 1: JSON Content-Type\n"
                        },
                        {
                          "text": "   ❌ Scenario 1 FAILED: apiRequestContext.post: Request context disposed.\nCall log:\n\u001b[2m  - → POST https://jsonplaceholder.typicode.com/users\u001b[22m\n\u001b[2m    - user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.7258.5 Safari/537.36\u001b[22m\n\u001b[2m    - accept: application/json\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\u001b[2m    - Content-Type: application/json\u001b[22m\n\u001b[2m    - X-Environment: dev\u001b[22m\n\u001b[2m    - X-API-Key: dev-api-key-12345\u001b[22m\n\u001b[2m    - content-length: 47\u001b[22m\n\n"
                        },
                        {
                          "text": "\n🧪 Executing scenario 2/3:\n"
                        },
                        {
                          "text": "   Test Case: Scenario 2\n"
                        },
                        {
                          "text": "\n🧪 Testing format 2: Form-Encoded Content-Type\n"
                        },
                        {
                          "text": "   ❌ Scenario 2 FAILED: apiRequestContext.post: Target page, context or browser has been closed\n"
                        },
                        {
                          "text": "\n🧪 Executing scenario 3/3:\n"
                        },
                        {
                          "text": "   Test Case: Scenario 3\n"
                        },
                        {
                          "text": "\n🧪 Testing format 3: Custom User-Agent\n"
                        },
                        {
                          "text": "   ❌ Scenario 3 FAILED: apiRequestContext.post: Target page, context or browser has been closed\n"
                        },
                        {
                          "text": "\n📈 Data-driven test completed:\n"
                        },
                        {
                          "text": "   ✅ Passed: 0/3\n"
                        },
                        {
                          "text": "   ❌ Failed: 3/3\n"
                        },
                        {
                          "text": "   📊 Success Rate: 0.00%\n"
                        },
                        {
                          "text": "✅ Cross-platform validation completed: 0/3 formats tested\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-08-12T23:28:44.025Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "/Users/Anand/github/playwright-api-test/test-results/dev/advanced-data-driven-tests-7046b-mats-regression-data-driven-dev-api-tests/trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-228959c7a6e716cffc25",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 237,
              "column": 7
            },
            {
              "title": "should execute multiple user registration scenarios with for loop validation @regression @data-driven",
              "ok": true,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-11195da70c1d50a68cba",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 59,
              "column": 7
            },
            {
              "title": "should execute bulk profile update scenarios with validation @regression @data-driven",
              "ok": true,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-bc8ad38e7807d8b45e8b",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 153,
              "column": 7
            },
            {
              "title": "should validate data consistency across different formats @regression @data-driven",
              "ok": true,
              "tags": [
                "regression",
                "data-driven"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "15f7aebba8b9497ae8ba-19883a83f00afb7d497e",
              "file": "advanced/data-driven-tests.spec.ts",
              "line": 237,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/header-validation.spec.ts",
      "file": "advanced/header-validation.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Request Header Validation",
          "file": "advanced/header-validation.spec.ts",
          "line": 22,
          "column": 6,
          "specs": [
            {
              "title": "should include all required headers in API requests @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-03a6bfff4fc6e9a39053",
              "file": "advanced/header-validation.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle authentication headers correctly @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-965cfa98d31c2f864866",
              "file": "advanced/header-validation.spec.ts",
              "line": 73,
              "column": 7
            },
            {
              "title": "should set correct Content-Type headers for different operations @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-715507afe2bf25beb2ed",
              "file": "advanced/header-validation.spec.ts",
              "line": 104,
              "column": 7
            },
            {
              "title": "should include all required headers in API requests @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-a7890f1b21c3f7c419b9",
              "file": "advanced/header-validation.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle authentication headers correctly @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-28fd226114dfe5a5792a",
              "file": "advanced/header-validation.spec.ts",
              "line": 73,
              "column": 7
            },
            {
              "title": "should set correct Content-Type headers for different operations @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-d989e2a79e3314751bb3",
              "file": "advanced/header-validation.spec.ts",
              "line": 104,
              "column": 7
            }
          ]
        },
        {
          "title": "Response Header Validation",
          "file": "advanced/header-validation.spec.ts",
          "line": 129,
          "column": 6,
          "specs": [
            {
              "title": "should return all expected headers in API responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-e142113886df744b5fd9",
              "file": "advanced/header-validation.spec.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "should include proper CORS headers in responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-03607b29c8c792fed15c",
              "file": "advanced/header-validation.spec.ts",
              "line": 181,
              "column": 7
            },
            {
              "title": "should include security headers in responses @regression @headers @security",
              "ok": true,
              "tags": [
                "regression",
                "headers",
                "security"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-433f1cfe1763bf62ad79",
              "file": "advanced/header-validation.spec.ts",
              "line": 211,
              "column": 7
            },
            {
              "title": "should return all expected headers in API responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-4f524216ab385ffaca98",
              "file": "advanced/header-validation.spec.ts",
              "line": 148,
              "column": 7
            },
            {
              "title": "should include proper CORS headers in responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-358cf41702f2e196d910",
              "file": "advanced/header-validation.spec.ts",
              "line": 181,
              "column": 7
            },
            {
              "title": "should include security headers in responses @regression @headers @security",
              "ok": true,
              "tags": [
                "regression",
                "headers",
                "security"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-effa3cb4602e96b0cc18",
              "file": "advanced/header-validation.spec.ts",
              "line": 211,
              "column": 7
            }
          ]
        },
        {
          "title": "Custom Header Testing",
          "file": "advanced/header-validation.spec.ts",
          "line": 233,
          "column": 6,
          "specs": [
            {
              "title": "should handle API version headers correctly @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-353aa4c73d1a6994de24",
              "file": "advanced/header-validation.spec.ts",
              "line": 250,
              "column": 7
            },
            {
              "title": "should include rate limiting headers in responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-8c0a4d54155585153e86",
              "file": "advanced/header-validation.spec.ts",
              "line": 279,
              "column": 7
            },
            {
              "title": "should include request tracking headers @regression @headers @tracking",
              "ok": true,
              "tags": [
                "regression",
                "headers",
                "tracking"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-5f3cb1320beaf0b250ad",
              "file": "advanced/header-validation.spec.ts",
              "line": 311,
              "column": 7
            },
            {
              "title": "should handle API version headers correctly @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-a582cf07527ab0f37790",
              "file": "advanced/header-validation.spec.ts",
              "line": 250,
              "column": 7
            },
            {
              "title": "should include rate limiting headers in responses @regression @headers",
              "ok": true,
              "tags": [
                "regression",
                "headers"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-cd75c11b97160dc595bc",
              "file": "advanced/header-validation.spec.ts",
              "line": 279,
              "column": 7
            },
            {
              "title": "should include request tracking headers @regression @headers @tracking",
              "ok": true,
              "tags": [
                "regression",
                "headers",
                "tracking"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "c20a2b8d6ad556f32164-52f9cb1f8d16d38d99e3",
              "file": "advanced/header-validation.spec.ts",
              "line": 311,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/negative-scenarios.spec.ts",
      "file": "advanced/negative-scenarios.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Invalid Data Validation Tests",
          "file": "advanced/negative-scenarios.spec.ts",
          "line": 22,
          "column": 6,
          "specs": [
            {
              "title": "should reject user creation with invalid data combinations @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-305a801390da9cb012ac",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle authentication failures correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-244fc5ecd0e628a26192",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 75,
              "column": 7
            },
            {
              "title": "should reject user creation with invalid data combinations @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-c792562d4bbe1d68039b",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle authentication failures correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-cff1e1c907a480025139",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 75,
              "column": 7
            }
          ]
        },
        {
          "title": "Resource Not Found Tests",
          "file": "advanced/negative-scenarios.spec.ts",
          "line": 100,
          "column": 6,
          "specs": [
            {
              "title": "should return 404 for non-existent user access @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-83400009f6990cba9236",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 119,
              "column": 7
            },
            {
              "title": "should handle invalid resource operations correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-9d9075d590ec8d8af532",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 149,
              "column": 7
            },
            {
              "title": "should return 404 for non-existent user access @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-4902b4188955cd179c20",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 119,
              "column": 7
            },
            {
              "title": "should handle invalid resource operations correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-4811cf2a6a936191c8d4",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 149,
              "column": 7
            }
          ]
        },
        {
          "title": "Unauthorized Access Tests",
          "file": "advanced/negative-scenarios.spec.ts",
          "line": 165,
          "column": 6,
          "specs": [
            {
              "title": "should reject access with invalid authentication tokens @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-c829d7f2007f2964a7a5",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "should reject authentication with incomplete credentials @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-f3552a05f78514b99693",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "should reject access with invalid authentication tokens @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-7d2293c4bda9b46824ed",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "should reject authentication with incomplete credentials @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-fb1e2d80b4c809b3b55a",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 220,
              "column": 7
            }
          ]
        },
        {
          "title": "Edge Case and Boundary Tests",
          "file": "advanced/negative-scenarios.spec.ts",
          "line": 242,
          "column": 6,
          "specs": [
            {
              "title": "should handle empty and null values appropriately @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-93b7d12646d6e54249e1",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "should handle malformed request data correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-505606f4c6782d29dd65",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 299,
              "column": 7
            },
            {
              "title": "should handle empty and null values appropriately @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-3a73faca308bed0a99a6",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "should handle malformed request data correctly @regression @negative",
              "ok": true,
              "tags": [
                "regression",
                "negative"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "89fddc11951250aa55df-78a213eee6963aeb5d70",
              "file": "advanced/negative-scenarios.spec.ts",
              "line": 299,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "advanced/performance-tests.spec.ts",
      "file": "advanced/performance-tests.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Concurrent Request Performance",
          "file": "advanced/performance-tests.spec.ts",
          "line": 22,
          "column": 6,
          "specs": [
            {
              "title": "should handle concurrent user creation efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-b28d5181a0dbe27d09f5",
              "file": "advanced/performance-tests.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle concurrent read operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-9e5b3c562874e0de7aa2",
              "file": "advanced/performance-tests.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "should handle mixed concurrent operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-05d782f7ea6ee983a6f9",
              "file": "advanced/performance-tests.spec.ts",
              "line": 136,
              "column": 7
            },
            {
              "title": "should handle concurrent user creation efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-b616b682b3f711aca191",
              "file": "advanced/performance-tests.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle concurrent read operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-6364eae4d1126751ce24",
              "file": "advanced/performance-tests.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "should handle mixed concurrent operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-40f2537fc79297170d1f",
              "file": "advanced/performance-tests.spec.ts",
              "line": 136,
              "column": 7
            },
            {
              "title": "should handle concurrent user creation efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-33181e981a6a15d1777f",
              "file": "advanced/performance-tests.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should handle concurrent read operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-1c90afcf296e9fd200a2",
              "file": "advanced/performance-tests.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "should handle mixed concurrent operations efficiently @performance @concurrent",
              "ok": true,
              "tags": [
                "performance",
                "concurrent"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-f1bf7feeaaa03d36e079",
              "file": "advanced/performance-tests.spec.ts",
              "line": 136,
              "column": 7
            }
          ]
        },
        {
          "title": "Load Testing with Data Sets",
          "file": "advanced/performance-tests.spec.ts",
          "line": 190,
          "column": 6,
          "specs": [
            {
              "title": "should maintain performance with bulk data processing @performance @bulk",
              "ok": true,
              "tags": [
                "performance",
                "bulk"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-5674c36ced41d24faf30",
              "file": "advanced/performance-tests.spec.ts",
              "line": 209,
              "column": 7
            },
            {
              "title": "should handle large data sets efficiently @performance @memory",
              "ok": true,
              "tags": [
                "performance",
                "memory"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-83c5ae12227f11b75402",
              "file": "advanced/performance-tests.spec.ts",
              "line": 272,
              "column": 7
            },
            {
              "title": "should maintain consistent response times @performance @consistency",
              "ok": true,
              "tags": [
                "performance",
                "consistency"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-ed30aa70a8b59a72a27d",
              "file": "advanced/performance-tests.spec.ts",
              "line": 330,
              "column": 7
            },
            {
              "title": "should maintain performance with bulk data processing @performance @bulk",
              "ok": true,
              "tags": [
                "performance",
                "bulk"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-c04d96b341b64305e89c",
              "file": "advanced/performance-tests.spec.ts",
              "line": 209,
              "column": 7
            },
            {
              "title": "should handle large data sets efficiently @performance @memory",
              "ok": true,
              "tags": [
                "performance",
                "memory"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-3bbdff426635b6d6421e",
              "file": "advanced/performance-tests.spec.ts",
              "line": 272,
              "column": 7
            },
            {
              "title": "should maintain consistent response times @performance @consistency",
              "ok": true,
              "tags": [
                "performance",
                "consistency"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-65458b0ec55d902800b0",
              "file": "advanced/performance-tests.spec.ts",
              "line": 330,
              "column": 7
            },
            {
              "title": "should maintain performance with bulk data processing @performance @bulk",
              "ok": true,
              "tags": [
                "performance",
                "bulk"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-6914b4fff352726b082c",
              "file": "advanced/performance-tests.spec.ts",
              "line": 209,
              "column": 7
            },
            {
              "title": "should handle large data sets efficiently @performance @memory",
              "ok": true,
              "tags": [
                "performance",
                "memory"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-05f0dccb13dafad4bb82",
              "file": "advanced/performance-tests.spec.ts",
              "line": 272,
              "column": 7
            },
            {
              "title": "should maintain consistent response times @performance @consistency",
              "ok": true,
              "tags": [
                "performance",
                "consistency"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-c13cff69ff5789b59b2b",
              "file": "advanced/performance-tests.spec.ts",
              "line": 330,
              "column": 7
            }
          ]
        },
        {
          "title": "Resource Usage Testing",
          "file": "advanced/performance-tests.spec.ts",
          "line": 374,
          "column": 6,
          "specs": [
            {
              "title": "should handle timeouts gracefully @performance @timeout",
              "ok": true,
              "tags": [
                "performance",
                "timeout"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-18029aa176e14b7e4aa3",
              "file": "advanced/performance-tests.spec.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "should efficiently manage connection pools @performance @connections",
              "ok": true,
              "tags": [
                "performance",
                "connections"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-03c313368c28aa5563ff",
              "file": "advanced/performance-tests.spec.ts",
              "line": 419,
              "column": 7
            },
            {
              "title": "should efficiently clean up resources @performance @cleanup",
              "ok": true,
              "tags": [
                "performance",
                "cleanup"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-f1eb259d4258d62eeeea",
              "file": "advanced/performance-tests.spec.ts",
              "line": 476,
              "column": 7
            },
            {
              "title": "should handle timeouts gracefully @performance @timeout",
              "ok": true,
              "tags": [
                "performance",
                "timeout"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-33005b6aeec042b895c4",
              "file": "advanced/performance-tests.spec.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "should efficiently manage connection pools @performance @connections",
              "ok": true,
              "tags": [
                "performance",
                "connections"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-c025555afc65875fbb7f",
              "file": "advanced/performance-tests.spec.ts",
              "line": 419,
              "column": 7
            },
            {
              "title": "should efficiently clean up resources @performance @cleanup",
              "ok": true,
              "tags": [
                "performance",
                "cleanup"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-13bdd262d8b1f50d2ae7",
              "file": "advanced/performance-tests.spec.ts",
              "line": 476,
              "column": 7
            },
            {
              "title": "should handle timeouts gracefully @performance @timeout",
              "ok": true,
              "tags": [
                "performance",
                "timeout"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-a41790129ba1042ab577",
              "file": "advanced/performance-tests.spec.ts",
              "line": 391,
              "column": 7
            },
            {
              "title": "should efficiently manage connection pools @performance @connections",
              "ok": true,
              "tags": [
                "performance",
                "connections"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-efb536bd08b5d2840752",
              "file": "advanced/performance-tests.spec.ts",
              "line": 419,
              "column": 7
            },
            {
              "title": "should efficiently clean up resources @performance @cleanup",
              "ok": true,
              "tags": [
                "performance",
                "cleanup"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-performance-tests",
                  "projectName": "dev-performance-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "18eebe9d181c3bc6ff5c-8f2344ddc33397980dbc",
              "file": "advanced/performance-tests.spec.ts",
              "line": 476,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "auth/authentication.spec.ts",
      "file": "auth/authentication.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication Flow",
          "file": "auth/authentication.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "should authenticate user with valid credentials @smoke @critical-path",
              "ok": true,
              "tags": [
                "smoke",
                "critical-path"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-dd4ff4f7dae8f79addc3",
              "file": "auth/authentication.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "should reject invalid credentials @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-876c7fa43ecf443bd500",
              "file": "auth/authentication.spec.ts",
              "line": 21,
              "column": 7
            },
            {
              "title": "should handle missing credentials @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-b21534d4f95caa97e78a",
              "file": "auth/authentication.spec.ts",
              "line": 26,
              "column": 7
            },
            {
              "title": "should authenticate user with valid credentials @smoke @critical-path",
              "ok": true,
              "tags": [
                "smoke",
                "critical-path"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-cc0d054a6b4cf28a8bd5",
              "file": "auth/authentication.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "should reject invalid credentials @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-f96e44ca89634963d70e",
              "file": "auth/authentication.spec.ts",
              "line": 21,
              "column": 7
            },
            {
              "title": "should handle missing credentials @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-0d1ed013d37935e4a704",
              "file": "auth/authentication.spec.ts",
              "line": 26,
              "column": 7
            }
          ]
        },
        {
          "title": "Session Management",
          "file": "auth/authentication.spec.ts",
          "line": 32,
          "column": 6,
          "specs": [
            {
              "title": "should maintain session with valid token @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-17d5b66722202563cb6f",
              "file": "auth/authentication.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should refresh authentication token @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-b294a5956f3daac572fb",
              "file": "auth/authentication.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "should handle session timeout scenarios @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-7859a772a8a392013640",
              "file": "auth/authentication.spec.ts",
              "line": 50,
              "column": 7
            },
            {
              "title": "should logout user successfully @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-78ba7e6b5e445ba2255b",
              "file": "auth/authentication.spec.ts",
              "line": 54,
              "column": 7
            },
            {
              "title": "should maintain session with valid token @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-dd05ed866a19b0bd1ad0",
              "file": "auth/authentication.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should refresh authentication token @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-4a34545574d882f23a67",
              "file": "auth/authentication.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "should handle session timeout scenarios @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-d7bd03d366a5e8d6bc3d",
              "file": "auth/authentication.spec.ts",
              "line": 50,
              "column": 7
            },
            {
              "title": "should logout user successfully @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-4809c8e7d197f53375dc",
              "file": "auth/authentication.spec.ts",
              "line": 54,
              "column": 7
            }
          ]
        },
        {
          "title": "Password Management",
          "file": "auth/authentication.spec.ts",
          "line": 60,
          "column": 6,
          "specs": [
            {
              "title": "should change password with valid current password @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-f2be9114f237f900a3fa",
              "file": "auth/authentication.spec.ts",
              "line": 69,
              "column": 7
            },
            {
              "title": "should reject password change with invalid current password @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-42ea1c6a0fbdd5c0122d",
              "file": "auth/authentication.spec.ts",
              "line": 74,
              "column": 7
            },
            {
              "title": "should handle forgot password request @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-657a534c855071764051",
              "file": "auth/authentication.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "should reset password with valid token @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-58534dee8be261fb7937",
              "file": "auth/authentication.spec.ts",
              "line": 82,
              "column": 7
            },
            {
              "title": "should change password with valid current password @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-4a91a7aac0e326d85a90",
              "file": "auth/authentication.spec.ts",
              "line": 69,
              "column": 7
            },
            {
              "title": "should reject password change with invalid current password @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-f99b87217a585e78c19c",
              "file": "auth/authentication.spec.ts",
              "line": 74,
              "column": 7
            },
            {
              "title": "should handle forgot password request @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-cfb0bb99a972e8e09b53",
              "file": "auth/authentication.spec.ts",
              "line": 78,
              "column": 7
            },
            {
              "title": "should reset password with valid token @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "62b8d4dbcee4331d62dc-7609f3b9601805e9d440",
              "file": "auth/authentication.spec.ts",
              "line": 82,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "dashboard-demo.spec.ts",
      "file": "dashboard-demo.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Dashboard Demo Data",
          "file": "dashboard-demo.spec.ts",
          "line": 5,
          "column": 6,
          "specs": [
            {
              "title": "API test to populate dashboard @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-004b6019b45d42fd0060",
              "file": "dashboard-demo.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "API error handling test @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-0b34ab9132ce1dcf09c6",
              "file": "dashboard-demo.spec.ts",
              "line": 73,
              "column": 7
            },
            {
              "title": "Performance test for dashboard metrics @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-949bd6b5fe2723bcc817",
              "file": "dashboard-demo.spec.ts",
              "line": 91,
              "column": 7
            },
            {
              "title": "API test to populate dashboard @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-172a9cc5eaea97b266d5",
              "file": "dashboard-demo.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "API error handling test @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-3b370e14edb037241cda",
              "file": "dashboard-demo.spec.ts",
              "line": 73,
              "column": 7
            },
            {
              "title": "Performance test for dashboard metrics @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9504e5afde21e9077f09-2f9a7a27a26c6eb7a5aa",
              "file": "dashboard-demo.spec.ts",
              "line": 91,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "generated/pet-management.spec.ts",
      "file": "generated/pet-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Pet Management API Tests - Requirements Coverage",
          "file": "generated/pet-management.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "REQ-PET-001-TC-001: Add a new pet to the store - Valid Request @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-1f453706b5f5bc5e3018",
              "file": "generated/pet-management.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "REQ-PET-001-TC-002: Add pet with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-cdbf41dfe90764b7b8d9",
              "file": "generated/pet-management.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "REQ-PET-001-TC-003: Add pet without required fields - Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-30f377c291b3543112a9",
              "file": "generated/pet-management.spec.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "REQ-PET-002-TC-001: Update an existing pet @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-01bf84f24b220fc84976",
              "file": "generated/pet-management.spec.ts",
              "line": 180,
              "column": 7
            },
            {
              "title": "REQ-PET-003-TC-001: Find pets by status @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-7b787ee6c015103f7f46",
              "file": "generated/pet-management.spec.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "REQ-PET-004-TC-001: Find pet by ID - Valid ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-a762e45506d8b1958b3a",
              "file": "generated/pet-management.spec.ts",
              "line": 296,
              "column": 7
            },
            {
              "title": "REQ-PET-004-TC-002: Find pet by invalid ID - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-38226a20f972b54c5e06",
              "file": "generated/pet-management.spec.ts",
              "line": 348,
              "column": 7
            },
            {
              "title": "REQ-PET-005-TC-001: Delete pet - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-7555db6775c87ec0df76",
              "file": "generated/pet-management.spec.ts",
              "line": 395,
              "column": 7
            },
            {
              "title": "REQ-PET-001-TC-001: Add a new pet to the store - Valid Request @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-4adb0c10279eeba98ccb",
              "file": "generated/pet-management.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "REQ-PET-001-TC-002: Add pet with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-c8f31099f84861deda77",
              "file": "generated/pet-management.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "REQ-PET-001-TC-003: Add pet without required fields - Validation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-09e5845de457e102c6fd",
              "file": "generated/pet-management.spec.ts",
              "line": 132,
              "column": 7
            },
            {
              "title": "REQ-PET-002-TC-001: Update an existing pet @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-875b9f08c2d1e0f06af1",
              "file": "generated/pet-management.spec.ts",
              "line": 180,
              "column": 7
            },
            {
              "title": "REQ-PET-003-TC-001: Find pets by status @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-297c0cfec75e84df41d4",
              "file": "generated/pet-management.spec.ts",
              "line": 238,
              "column": 7
            },
            {
              "title": "REQ-PET-004-TC-001: Find pet by ID - Valid ID",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-18f136d00f91d5a3e4ac",
              "file": "generated/pet-management.spec.ts",
              "line": 296,
              "column": 7
            },
            {
              "title": "REQ-PET-004-TC-002: Find pet by invalid ID - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-bf7dbe565e818be01e50",
              "file": "generated/pet-management.spec.ts",
              "line": 348,
              "column": 7
            },
            {
              "title": "REQ-PET-005-TC-001: Delete pet - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "3b695eb5d61d631f9b16-b82dbb853f0dfba4ab39",
              "file": "generated/pet-management.spec.ts",
              "line": 395,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "generated/store-management.spec.ts",
      "file": "generated/store-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Store Management API Tests - Requirements Coverage",
          "file": "generated/store-management.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "REQ-STO-001-TC-001: Get store inventory @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-026f47c01229ddbea521",
              "file": "generated/store-management.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "REQ-STO-002-TC-001: Place order for pet - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-fc5163288fe78b89b6af",
              "file": "generated/store-management.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "REQ-STO-002-TC-002: Place order with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-eefdf1876968ef8d309b",
              "file": "generated/store-management.spec.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "REQ-STO-003-TC-001: Find order by ID - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-690ee174ed4da43d4e58",
              "file": "generated/store-management.spec.ts",
              "line": 169,
              "column": 7
            },
            {
              "title": "REQ-STO-003-TC-002: Find order by invalid ID - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-050d43e66986c985aade",
              "file": "generated/store-management.spec.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "REQ-STO-004-TC-001: Delete order - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-097be78de328f146b513",
              "file": "generated/store-management.spec.ts",
              "line": 267,
              "column": 7
            },
            {
              "title": "REQ-STO-001-TC-001: Get store inventory @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-562af8aedc82e232743b",
              "file": "generated/store-management.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "REQ-STO-002-TC-001: Place order for pet - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-baf10ebbea0b6f1dc3c2",
              "file": "generated/store-management.spec.ts",
              "line": 68,
              "column": 7
            },
            {
              "title": "REQ-STO-002-TC-002: Place order with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-ee3a26f4e5e9084d5a0c",
              "file": "generated/store-management.spec.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "REQ-STO-003-TC-001: Find order by ID - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-14b3409cd526f5cac41b",
              "file": "generated/store-management.spec.ts",
              "line": 169,
              "column": 7
            },
            {
              "title": "REQ-STO-003-TC-002: Find order by invalid ID - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-cf68ce3c97e81018302e",
              "file": "generated/store-management.spec.ts",
              "line": 220,
              "column": 7
            },
            {
              "title": "REQ-STO-004-TC-001: Delete order - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "60ceed30b75c34efbe6e-f34ab6d9b39f2ee77d50",
              "file": "generated/store-management.spec.ts",
              "line": 267,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "generated/user-management.spec.ts",
      "file": "generated/user-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Management API Tests - Requirements Coverage",
          "file": "generated/user-management.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "REQ-USE-001-TC-001: Create user - Valid Request @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-52aeff3f16074102c5b2",
              "file": "generated/user-management.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "REQ-USE-001-TC-002: Create user with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-8be73872742e7498faae",
              "file": "generated/user-management.spec.ts",
              "line": 69,
              "column": 7
            },
            {
              "title": "REQ-USE-002-TC-001: Create users with array - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-01003a8760c911fc0c30",
              "file": "generated/user-management.spec.ts",
              "line": 117,
              "column": 7
            },
            {
              "title": "REQ-USE-003-TC-001: Create users with list - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-7892bce39c0d3240abb2",
              "file": "generated/user-management.spec.ts",
              "line": 162,
              "column": 7
            },
            {
              "title": "REQ-USE-004-TC-001: Get user by username - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-9c96c7028fb220e395f8",
              "file": "generated/user-management.spec.ts",
              "line": 207,
              "column": 7
            },
            {
              "title": "REQ-USE-004-TC-002: Get user by non-existent username - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-0fefcdc7b66a94d3f470",
              "file": "generated/user-management.spec.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "REQ-USE-005-TC-001: Update user - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-c96fc70df4b97712bd75",
              "file": "generated/user-management.spec.ts",
              "line": 305,
              "column": 7
            },
            {
              "title": "REQ-USE-006-TC-001: Delete user - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-a3f4699b51b33577a424",
              "file": "generated/user-management.spec.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "REQ-USE-007-TC-001: User login - Valid Credentials @critical",
              "ok": true,
              "tags": [
                "critical"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-02e69bedafc7898546e0",
              "file": "generated/user-management.spec.ts",
              "line": 409,
              "column": 7
            },
            {
              "title": "REQ-USE-007-TC-002: User login - Invalid Credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-9d4d3021d9677d4bcc51",
              "file": "generated/user-management.spec.ts",
              "line": 459,
              "column": 7
            },
            {
              "title": "REQ-USE-008-TC-001: User logout @critical",
              "ok": true,
              "tags": [
                "critical"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-558a0dbd66ea876c4bc5",
              "file": "generated/user-management.spec.ts",
              "line": 507,
              "column": 7
            },
            {
              "title": "REQ-USE-001-TC-001: Create user - Valid Request @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-4bd520f86a75208ca665",
              "file": "generated/user-management.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "REQ-USE-001-TC-002: Create user with invalid data - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-05529d113cde0a5137bc",
              "file": "generated/user-management.spec.ts",
              "line": 69,
              "column": 7
            },
            {
              "title": "REQ-USE-002-TC-001: Create users with array - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-8ea31095c4dfd4ca9b30",
              "file": "generated/user-management.spec.ts",
              "line": 117,
              "column": 7
            },
            {
              "title": "REQ-USE-003-TC-001: Create users with list - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-efebf17d2311fc93062b",
              "file": "generated/user-management.spec.ts",
              "line": 162,
              "column": 7
            },
            {
              "title": "REQ-USE-004-TC-001: Get user by username - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-d1ba0cfb1d52893955c2",
              "file": "generated/user-management.spec.ts",
              "line": 207,
              "column": 7
            },
            {
              "title": "REQ-USE-004-TC-002: Get user by non-existent username - Error Handling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-7e0120ed16c1ddf1882a",
              "file": "generated/user-management.spec.ts",
              "line": 258,
              "column": 7
            },
            {
              "title": "REQ-USE-005-TC-001: Update user - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-ba1ab1c222a97bbcaf5d",
              "file": "generated/user-management.spec.ts",
              "line": 305,
              "column": 7
            },
            {
              "title": "REQ-USE-006-TC-001: Delete user - Valid Request",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-740b368382c7cda64c54",
              "file": "generated/user-management.spec.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "REQ-USE-007-TC-001: User login - Valid Credentials @critical",
              "ok": true,
              "tags": [
                "critical"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-8d8704109bbdbe2113a6",
              "file": "generated/user-management.spec.ts",
              "line": 409,
              "column": 7
            },
            {
              "title": "REQ-USE-007-TC-002: User login - Invalid Credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-673cfda7ce70e8425569",
              "file": "generated/user-management.spec.ts",
              "line": 459,
              "column": 7
            },
            {
              "title": "REQ-USE-008-TC-001: User logout @critical",
              "ok": true,
              "tags": [
                "critical"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "bf9a3126612ffebb6471-5a1f71fe169a6794c726",
              "file": "generated/user-management.spec.ts",
              "line": 507,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "migration/simple-supertest-demo.spec.ts",
      "file": "migration/simple-supertest-demo.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Simple Supertest Format Demo",
          "file": "migration/simple-supertest-demo.spec.ts",
          "line": 10,
          "column": 6,
          "specs": [
            {
              "title": "should generate logs in Supertest format @supertest",
              "ok": true,
              "tags": [
                "supertest"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "ce6021b9eb85bdb190c3-1df6a90c8bace32e6d1c",
              "file": "migration/simple-supertest-demo.spec.ts",
              "line": 11,
              "column": 7
            },
            {
              "title": "should generate logs in Supertest format @supertest",
              "ok": true,
              "tags": [
                "supertest"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "ce6021b9eb85bdb190c3-98df3aff80bd7e296692",
              "file": "migration/simple-supertest-demo.spec.ts",
              "line": 11,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "migration/supertest-roundtrip-demo.spec.ts",
      "file": "migration/supertest-roundtrip-demo.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Supertest Round-Trip Migration Demo",
          "file": "migration/supertest-roundtrip-demo.spec.ts",
          "line": 16,
          "column": 6,
          "specs": [
            {
              "title": "should authenticate user with valid credentials for migration demo @supertest @migration",
              "ok": true,
              "tags": [
                "supertest",
                "migration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b97c3522e486841179b3-6087e2767b951d5eebbb",
              "file": "migration/supertest-roundtrip-demo.spec.ts",
              "line": 37,
              "column": 7
            },
            {
              "title": "should update user profile successfully for migration demo @supertest @migration",
              "ok": true,
              "tags": [
                "supertest",
                "migration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b97c3522e486841179b3-ee21381ef6d177026aba",
              "file": "migration/supertest-roundtrip-demo.spec.ts",
              "line": 69,
              "column": 7
            },
            {
              "title": "should authenticate user with valid credentials for migration demo @supertest @migration",
              "ok": true,
              "tags": [
                "supertest",
                "migration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b97c3522e486841179b3-48552c8e102ec8def89d",
              "file": "migration/supertest-roundtrip-demo.spec.ts",
              "line": 37,
              "column": 7
            },
            {
              "title": "should update user profile successfully for migration demo @supertest @migration",
              "ok": true,
              "tags": [
                "supertest",
                "migration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b97c3522e486841179b3-027a7d5ba635e3bb3ae2",
              "file": "migration/supertest-roundtrip-demo.spec.ts",
              "line": 69,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "profile/profileManagement.spec.ts",
      "file": "profile/profileManagement.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Profile Management",
          "file": "profile/profileManagement.spec.ts",
          "line": 6,
          "column": 6,
          "specs": [
            {
              "title": "should get user profile information @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-c82d857357574de6bc29",
              "file": "profile/profileManagement.spec.ts",
              "line": 15,
              "column": 7
            },
            {
              "title": "should update basic profile information @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-55d478afd753cb226854",
              "file": "profile/profileManagement.spec.ts",
              "line": 20,
              "column": 7
            },
            {
              "title": "should get user profile information @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-a286cc5974d11d6399aa",
              "file": "profile/profileManagement.spec.ts",
              "line": 15,
              "column": 7
            },
            {
              "title": "should update basic profile information @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-5b5985115e5737046a80",
              "file": "profile/profileManagement.spec.ts",
              "line": 20,
              "column": 7
            }
          ]
        },
        {
          "title": "Email Management",
          "file": "profile/profileManagement.spec.ts",
          "line": 32,
          "column": 6,
          "specs": [
            {
              "title": "should update email address @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-a65a14fc19e3df090a74",
              "file": "profile/profileManagement.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should validate email format during update @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-b56c999cbf72ed80e482",
              "file": "profile/profileManagement.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "should handle duplicate email update @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-7b743e1f59a2522eb733",
              "file": "profile/profileManagement.spec.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "should verify email change confirmation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-2dffb112c27cdab2947c",
              "file": "profile/profileManagement.spec.ts",
              "line": 70,
              "column": 7
            },
            {
              "title": "should update email address @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-0a9a17b570d0b5a68559",
              "file": "profile/profileManagement.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "should validate email format during update @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-68d7426bfd2250cb66e8",
              "file": "profile/profileManagement.spec.ts",
              "line": 48,
              "column": 7
            },
            {
              "title": "should handle duplicate email update @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-bd0ec118620c4629ea68",
              "file": "profile/profileManagement.spec.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "should verify email change confirmation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-798421507d71361525ec",
              "file": "profile/profileManagement.spec.ts",
              "line": 70,
              "column": 7
            }
          ]
        },
        {
          "title": "Phone Number Management",
          "file": "profile/profileManagement.spec.ts",
          "line": 78,
          "column": 6,
          "specs": [
            {
              "title": "should update phone number @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-9a2e0e8443d0bc5aaee1",
              "file": "profile/profileManagement.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "should validate phone number format @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-44d760e96e4039a8e9ea",
              "file": "profile/profileManagement.spec.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "should handle international phone numbers @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-f2e2370903bdc7160a32",
              "file": "profile/profileManagement.spec.ts",
              "line": 99,
              "column": 7
            },
            {
              "title": "should verify phone number change @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-b2a00a15f34c4a86b731",
              "file": "profile/profileManagement.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "should update phone number @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-8d4504f8085e7ddb1aa3",
              "file": "profile/profileManagement.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "should validate phone number format @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-84ea8fab0998137a6b4d",
              "file": "profile/profileManagement.spec.ts",
              "line": 94,
              "column": 7
            },
            {
              "title": "should handle international phone numbers @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-013b33bb5864fc81a5f2",
              "file": "profile/profileManagement.spec.ts",
              "line": 99,
              "column": 7
            },
            {
              "title": "should verify phone number change @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-ff81e132e4c088682480",
              "file": "profile/profileManagement.spec.ts",
              "line": 106,
              "column": 7
            }
          ]
        },
        {
          "title": "Address Management",
          "file": "profile/profileManagement.spec.ts",
          "line": 112,
          "column": 6,
          "specs": [
            {
              "title": "should update address information @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-65d89ade3eef5058564c",
              "file": "profile/profileManagement.spec.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "should handle partial address updates @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-aefdf08005f4342880ca",
              "file": "profile/profileManagement.spec.ts",
              "line": 128,
              "column": 7
            },
            {
              "title": "should update address information @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-4d18ceec5646bdb106c1",
              "file": "profile/profileManagement.spec.ts",
              "line": 121,
              "column": 7
            },
            {
              "title": "should handle partial address updates @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-31a0278d96535216edd3",
              "file": "profile/profileManagement.spec.ts",
              "line": 128,
              "column": 7
            }
          ]
        },
        {
          "title": "Profile Picture Management",
          "file": "profile/profileManagement.spec.ts",
          "line": 141,
          "column": 6,
          "specs": [
            {
              "title": "should update profile picture URL @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-1f93fc14f0e073ca3cbf",
              "file": "profile/profileManagement.spec.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "should handle avatar upload simulation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-3232c0225e5bff3743b3",
              "file": "profile/profileManagement.spec.ts",
              "line": 167,
              "column": 7
            },
            {
              "title": "should update profile picture URL @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-1152889ee04646944730",
              "file": "profile/profileManagement.spec.ts",
              "line": 150,
              "column": 7
            },
            {
              "title": "should handle avatar upload simulation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "0fde6bc99e15eff37c00-61a308d483c4a2282bfc",
              "file": "profile/profileManagement.spec.ts",
              "line": 167,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/authentication-and-session-management.spec.ts",
      "file": "real-working/authentication-and-session-management.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Authentication and Session Management",
          "file": "real-working/authentication-and-session-management.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "Authentication and Session Management @auth @session @security",
              "ok": true,
              "tags": [
                "auth",
                "session",
                "security"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a61bad82fe6ec1ba600b-e04914a2f2e64d16fb09",
              "file": "real-working/authentication-and-session-management.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "Authentication and Session Management @auth @session @security",
              "ok": true,
              "tags": [
                "auth",
                "session",
                "security"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "a61bad82fe6ec1ba600b-e7142f7a02b71aa92468",
              "file": "real-working/authentication-and-session-management.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/avatar-and-file-operations.spec.ts",
      "file": "real-working/avatar-and-file-operations.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Avatar and File Operations",
          "file": "real-working/avatar-and-file-operations.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "Avatar and File Operations @files @avatar @upload",
              "ok": true,
              "tags": [
                "files",
                "avatar",
                "upload"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d37e61d6b7071e1a6de2-2d560bae1ca6da77036c",
              "file": "real-working/avatar-and-file-operations.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "Avatar and File Operations @files @avatar @upload",
              "ok": true,
              "tags": [
                "files",
                "avatar",
                "upload"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "d37e61d6b7071e1a6de2-49d50d1772b38522b960",
              "file": "real-working/avatar-and-file-operations.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/error-handling-and-edge-cases.spec.ts",
      "file": "real-working/error-handling-and-edge-cases.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Error Handling and Edge Cases",
          "file": "real-working/error-handling-and-edge-cases.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "Error Handling and Edge Cases @negative @error @edge-cases",
              "ok": true,
              "tags": [
                "negative",
                "error",
                "edge-cases"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "13cba47574c2856f48a8-47ba10576dfa7d204b6c",
              "file": "real-working/error-handling-and-edge-cases.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "Error Handling and Edge Cases @negative @error @edge-cases",
              "ok": true,
              "tags": [
                "negative",
                "error",
                "edge-cases"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "13cba47574c2856f48a8-3fe8cfaecfe16308a048",
              "file": "real-working/error-handling-and-edge-cases.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/final-working-tests.spec.ts",
      "file": "real-working/final-working-tests.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Final Real Working Tests",
          "file": "real-working/final-working-tests.spec.ts",
          "line": 13,
          "column": 6,
          "specs": [
            {
              "title": "User Registration Test @smoke @registration",
              "ok": true,
              "tags": [
                "smoke",
                "registration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-18c8a1ea5c017a425909",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "User Registration with Validation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-c077b406b4282d52fbc8",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 29,
              "column": 7
            },
            {
              "title": "Multiple User Registration @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-2e33903c5d4dcba08b0a",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 41,
              "column": 7
            },
            {
              "title": "User Registration Test @smoke @registration",
              "ok": true,
              "tags": [
                "smoke",
                "registration"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-e9b7e6e40efa7298c23e",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "User Registration with Validation @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-925367794558ab7202d9",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 29,
              "column": 7
            },
            {
              "title": "Multiple User Registration @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "5e6208acefb30ed00bfa-f7ca6831e6452cdd380f",
              "file": "real-working/final-working-tests.spec.ts",
              "line": 41,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/profile-management-operations.spec.ts",
      "file": "real-working/profile-management-operations.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Profile Management Operations",
          "file": "real-working/profile-management-operations.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "Profile Management Operations @profile @update @regression",
              "ok": true,
              "tags": [
                "profile",
                "update",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2d8e6c5dd36ff60f79ed-c6046147c2e474143567",
              "file": "real-working/profile-management-operations.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "Profile Management Operations @profile @update @regression",
              "ok": true,
              "tags": [
                "profile",
                "update",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "2d8e6c5dd36ff60f79ed-f211aa948aef37fa3dc5",
              "file": "real-working/profile-management-operations.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/simple-working-test.spec.ts",
      "file": "real-working/simple-working-test.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Simple Real Working Test",
          "file": "real-working/simple-working-test.spec.ts",
          "line": 13,
          "column": 6,
          "specs": [
            {
              "title": "should register a new user successfully (copy of working test) @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "831eb74060665b3e4b0a-cc0a68c6cc5ee513cf4c",
              "file": "real-working/simple-working-test.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should create and manage user (copy working pattern) @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "831eb74060665b3e4b0a-beb1cec049436ecb1631",
              "file": "real-working/simple-working-test.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "should register a new user successfully (copy of working test) @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "831eb74060665b3e4b0a-c29ac50733cc742df13c",
              "file": "real-working/simple-working-test.spec.ts",
              "line": 14,
              "column": 7
            },
            {
              "title": "should create and manage user (copy working pattern) @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "831eb74060665b3e4b0a-05f18fffa41686d838af",
              "file": "real-working/simple-working-test.spec.ts",
              "line": 24,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/user-list-and-bulk-operations.spec.ts",
      "file": "real-working/user-list-and-bulk-operations.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User List and Bulk Operations",
          "file": "real-working/user-list-and-bulk-operations.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "User List and Bulk Operations @bulk @performance @users",
              "ok": true,
              "tags": [
                "bulk",
                "performance",
                "users"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb7cd1027ab48362db08-025d0c1f249130c5b0ec",
              "file": "real-working/user-list-and-bulk-operations.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "User List and Bulk Operations @bulk @performance @users",
              "ok": true,
              "tags": [
                "bulk",
                "performance",
                "users"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "eb7cd1027ab48362db08-95ab9ef66f2a25be3a87",
              "file": "real-working/user-list-and-bulk-operations.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "real-working/user-registration-and-profile-flow.spec.ts",
      "file": "real-working/user-registration-and-profile-flow.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Registration and Profile Flow",
          "file": "real-working/user-registration-and-profile-flow.spec.ts",
          "line": 14,
          "column": 6,
          "specs": [
            {
              "title": "User Registration and Profile Flow @smoke @registration @auth",
              "ok": true,
              "tags": [
                "smoke",
                "registration",
                "auth"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9de9c018ef8a6db769de-5e637c6510ccc5348eb0",
              "file": "real-working/user-registration-and-profile-flow.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "User Registration and Profile Flow @smoke @registration @auth",
              "ok": true,
              "tags": [
                "smoke",
                "registration",
                "auth"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "9de9c018ef8a6db769de-16ca1a05931ff978be74",
              "file": "real-working/user-registration-and-profile-flow.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "reality-check/converted-test-reality.spec.ts",
      "file": "reality-check/converted-test-reality.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Sample Supertest Iblogin - Reality Check",
          "file": "reality-check/converted-test-reality.spec.ts",
          "line": 17,
          "column": 6,
          "specs": [
            {
              "title": "Sample Supertest Iblogin Reality Check @iblogin @auth @headers @testcase",
              "ok": true,
              "tags": [
                "iblogin",
                "auth",
                "headers",
                "testcase"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "13f27462ec02306a7a51-c6308e8e3ac6c8939691",
              "file": "reality-check/converted-test-reality.spec.ts",
              "line": 26,
              "column": 7
            },
            {
              "title": "Sample Supertest Iblogin Reality Check @iblogin @auth @headers @testcase",
              "ok": true,
              "tags": [
                "iblogin",
                "auth",
                "headers",
                "testcase"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "13f27462ec02306a7a51-e86798015a71e1d2e6e1",
              "file": "reality-check/converted-test-reality.spec.ts",
              "line": 26,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "simple.spec.ts",
      "file": "simple.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Simple API Test",
          "file": "simple.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should make a basic API call",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b095e72a376a9d09f724-7d957b71ea0b7e006c31",
              "file": "simple.spec.ts",
              "line": 4,
              "column": 7
            },
            {
              "title": "should make a basic API call",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "b095e72a376a9d09f724-c6847db533b45056d6cc",
              "file": "simple.spec.ts",
              "line": 4,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "trace-demo.spec.ts",
      "file": "trace-demo.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Trace Demo",
          "file": "trace-demo.spec.ts",
          "line": 5,
          "column": 6,
          "specs": [
            {
              "title": "simple API test for trace demonstration @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "afb407c2c6a21200840d-d1afc9150a11f19a1a23",
              "file": "trace-demo.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "API test with multiple requests for trace analysis @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "afb407c2c6a21200840d-a274e20dd452ab899208",
              "file": "trace-demo.spec.ts",
              "line": 24,
              "column": 7
            },
            {
              "title": "simple API test for trace demonstration @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "afb407c2c6a21200840d-837420acd5417b97b947",
              "file": "trace-demo.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "API test with multiple requests for trace analysis @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "afb407c2c6a21200840d-e5d534629812ee41fcea",
              "file": "trace-demo.spec.ts",
              "line": 24,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "user-management/userRegistration.spec.ts",
      "file": "user-management/userRegistration.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Registration Flow",
          "file": "user-management/userRegistration.spec.ts",
          "line": 5,
          "column": 6,
          "specs": [
            {
              "title": "should register a new user successfully @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-323ca922f43049839f29",
              "file": "user-management/userRegistration.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "should handle duplicate email registration @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-3d8a3c3eed1b306ef5c7",
              "file": "user-management/userRegistration.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "should validate required fields during registration @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-972d016a98e8705f7000",
              "file": "user-management/userRegistration.spec.ts",
              "line": 23,
              "column": 7
            },
            {
              "title": "should register a new user successfully @smoke @regression",
              "ok": true,
              "tags": [
                "smoke",
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-82027e13f17f0a3d04b5",
              "file": "user-management/userRegistration.spec.ts",
              "line": 6,
              "column": 7
            },
            {
              "title": "should handle duplicate email registration @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-4065831c31d219b50916",
              "file": "user-management/userRegistration.spec.ts",
              "line": 16,
              "column": 7
            },
            {
              "title": "should validate required fields during registration @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-86be961827ee2f97cb55",
              "file": "user-management/userRegistration.spec.ts",
              "line": 23,
              "column": 7
            }
          ]
        },
        {
          "title": "User Management Operations",
          "file": "user-management/userRegistration.spec.ts",
          "line": 29,
          "column": 6,
          "specs": [
            {
              "title": "should retrieve user profile @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-73b54e75c087c97fc804",
              "file": "user-management/userRegistration.spec.ts",
              "line": 38,
              "column": 7
            },
            {
              "title": "should update user profile successfully @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-d46a7d025990754ff5bb",
              "file": "user-management/userRegistration.spec.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "should handle user not found scenario @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-f36b2699efe1170f0ac0",
              "file": "user-management/userRegistration.spec.ts",
              "line": 53,
              "column": 7
            },
            {
              "title": "should delete user account @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-331665ff76977067d6d2",
              "file": "user-management/userRegistration.spec.ts",
              "line": 58,
              "column": 7
            },
            {
              "title": "should retrieve user profile @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-f6d030b431d1d0299ed1",
              "file": "user-management/userRegistration.spec.ts",
              "line": 38,
              "column": 7
            },
            {
              "title": "should update user profile successfully @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-d79f56fafab12c0216d7",
              "file": "user-management/userRegistration.spec.ts",
              "line": 43,
              "column": 7
            },
            {
              "title": "should handle user not found scenario @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-a422cc594b8c96938d0a",
              "file": "user-management/userRegistration.spec.ts",
              "line": 53,
              "column": 7
            },
            {
              "title": "should delete user account @regression",
              "ok": true,
              "tags": [
                "regression"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-08af98b2bc3cb0d60e30",
              "file": "user-management/userRegistration.spec.ts",
              "line": 58,
              "column": 7
            }
          ]
        },
        {
          "title": "Bulk User Operations",
          "file": "user-management/userRegistration.spec.ts",
          "line": 64,
          "column": 6,
          "specs": [
            {
              "title": "should handle multiple user creation @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-d60739bf20457a1be43e",
              "file": "user-management/userRegistration.spec.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "should retrieve list of users @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests",
                  "projectName": "dev-api-tests",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-b72e1e4a0bda1a3c8c9a",
              "file": "user-management/userRegistration.spec.ts",
              "line": 83,
              "column": 7
            },
            {
              "title": "should handle multiple user creation @performance",
              "ok": true,
              "tags": [
                "performance"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-54e8972ab237aa5eac94",
              "file": "user-management/userRegistration.spec.ts",
              "line": 65,
              "column": 7
            },
            {
              "title": "should retrieve list of users @smoke",
              "ok": true,
              "tags": [
                "smoke"
              ],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "dev-api-tests-debug",
                  "projectName": "dev-api-tests-debug",
                  "results": [],
                  "status": "skipped"
                }
              ],
              "id": "34cc830db31310f20a3c-f5e159353b15a525fd20",
              "file": "user-management/userRegistration.spec.ts",
              "line": 83,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-08-12T23:28:39.978Z",
    "duration": 8233.86,
    "expected": 0,
    "skipped": 239,
    "unexpected": 10,
    "flaky": 0
  }
}