{
  "name": "playwright-api-testing-framework",
  "version": "1.0.0",
  "description": "Modern Playwright API Testing Framework with Logging, Dynamic Data, and Dashboard",
  "main": "index.ts",
  "scripts": {
    "build": "tsc",
    "test": "npx playwright test && node scripts/open-reports.js",
    "test:headed": "npx playwright test --headed && node scripts/open-reports.js",
    "test:debug": "npx playwright test --debug",
    "test:report": "npx playwright show-report",
    "test:ui": "npx playwright test --ui",
    "generate:data": "tsx utils/dataGenerator.ts",
    "start:dashboard": "tsx dashboard/server.ts",
    "test:user-management": "npx playwright test tests/user-management/ && node scripts/open-reports.js",
    "test:auth": "npx playwright test tests/auth/ && node scripts/open-reports.js",
    "test:profile": "npx playwright test tests/profile/ && node scripts/open-reports.js",
    "test:regression": "npx playwright test --grep @regression && node scripts/open-reports.js",
    "test:smoke": "npx playwright test --grep @smoke && node scripts/open-reports.js",
    "test:trace": "npx playwright test --project=api-tests-with-trace && node scripts/open-reports.js",
    "open:reports": "node scripts/open-reports.js",
    "type-check": "tsc --noEmit",
    "test:dev": "TEST_ENV=dev npx playwright test --project=dev-api-tests",
    "test:dev:debug": "TEST_ENV=dev npx playwright test --project=dev-api-tests-debug",
    "test:dev:verbose": "TEST_ENV=dev ENABLE_FULL_LOGS=true ENABLE_CONSOLE_LOGGING=true npx playwright test --project=dev-api-tests",
    "test:dev:supertest": "TEST_ENV=dev ENABLE_FULL_LOGS=true SUPERTEST_FORMAT=true npx playwright test --project=dev-api-tests",
    "test:dev:advanced": "TEST_ENV=dev npx playwright test tests/advanced/",
    "test:dev:performance": "TEST_ENV=dev npx playwright test --grep @performance",
    "test:staging": "TEST_ENV=staging npx playwright test --project=staging-api-tests",
    "test:staging:debug": "TEST_ENV=staging npx playwright test --project=staging-api-tests-debug",
    "test:staging:verbose": "TEST_ENV=staging ENABLE_FULL_LOGS=true ENABLE_CONSOLE_LOGGING=true npx playwright test --project=staging-api-tests",
    "test:staging:supertest": "TEST_ENV=staging ENABLE_FULL_LOGS=true SUPERTEST_FORMAT=true npx playwright test --project=staging-api-tests",
    "test:staging:advanced": "TEST_ENV=staging npx playwright test tests/advanced/",
    "test:staging:performance": "TEST_ENV=staging npx playwright test --grep @performance",
    "test:qa": "TEST_ENV=qa npx playwright test --project=qa-api-tests",
    "test:qa:debug": "TEST_ENV=qa npx playwright test --project=qa-api-tests-debug",
    "test:qa:verbose": "TEST_ENV=qa ENABLE_FULL_LOGS=true ENABLE_CONSOLE_LOGGING=true npx playwright test --project=qa-api-tests",
    "test:qa:advanced": "TEST_ENV=qa npx playwright test tests/advanced/",
    "test:qa:performance": "TEST_ENV=qa npx playwright test --grep @performance",
    "monitor:http": "./scripts/monitor-http-logs.sh",
    "test:dev:live": "npm run monitor:http & sleep 2 && npm run test:dev:verbose",
    "test:staging:live": "npm run monitor:http & sleep 2 && npm run test:staging:verbose",
    "test:prod": "TEST_ENV=prod npx playwright test --project=prod-api-tests --workers=1 --retries=0",
    "test:prod:basic": "TEST_ENV=prod npx playwright test tests/basic/ --workers=1 --retries=0",
    "test:prod:smoke": "TEST_ENV=prod npx playwright test --grep @smoke --workers=1 --retries=0",
    "test:multi-env": "./scripts/run-multi-env.sh",
    "test:multi-env:basic": "./scripts/run-multi-env.sh -s basic -e dev,staging,qa",
    "test:multi-env:advanced": "./scripts/run-multi-env.sh -s advanced -e dev,staging",
    "test:multi-env:performance": "./scripts/run-multi-env.sh -s performance -e qa,staging",
    "test:multi-env:parallel": "./scripts/run-multi-env.sh -s basic -e dev,staging,qa --parallel",
    "test:multi-env:simple": "./scripts/run-simple-multi-env.sh dev staging",
    "test:multi-env:all": "./scripts/run-simple-multi-env.sh dev staging qa prod",
    "env:validate": "tsx scripts/validate-environments.ts",
    "env:compare": "tsx scripts/compare-environments.ts",
    "env:switch": "tsx scripts/switch-environment.ts",
    "logs:archive": "./scripts/manage-logs.sh archive",
    "logs:archive:dev": "./scripts/manage-logs.sh archive dev",
    "logs:archive:staging": "./scripts/manage-logs.sh archive staging",
    "logs:archive:qa": "./scripts/manage-logs.sh archive qa",
    "logs:archive:prod": "./scripts/manage-logs.sh archive prod",
    "logs:list": "./scripts/manage-logs.sh list",
    "logs:search": "./scripts/manage-logs.sh search",
    "logs:cleanup": "./scripts/manage-logs.sh cleanup",
    "logs:summary": "./scripts/manage-logs.sh summary",
    "logs:help": "./scripts/manage-logs.sh help",
    "convert:logs": "tsx utils/log-converter/log-converter-cli.ts",
    "convert:logs:custom": "tsx utils/log-converter/log-converter-cli.ts --input",
    "convert:demo": "tsx utils/log-converter/demo.sh",
    "convert:quick": "tsx utils/log-converter/quick-start.ts",
        "convert:supertest": "npx tsx utils/log-converter/log-to-supertest.ts",
    "cleanup:logs": "./cleanup-logs.sh",
    "analyze:supertest": "npx tsx utils/log-converter/supertest-analyzer.ts",
    "assess:enterprise": "cat ENTERPRISE-MIGRATION-ASSESSMENT.md"
  },
  "keywords": [
    "playwright",
    "api-testing",
    "automation",
    "testing-framework"
  ],
  "author": "Anand VM",
  "license": "MIT",
  "dependencies": {
    "@faker-js/faker": "^8.3.1",
    "@playwright/test": "^1.40.0",
    "axios": "^1.6.0",
    "chalk": "^5.5.0",
    "chart.js": "^4.4.0",
    "commander": "^14.0.0",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "handlebars": "^4.7.8",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "socket.io": "^4.7.4",
    "uuid": "^9.0.1",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/lodash": "^4.14.202",
    "@types/node": "^20.8.0",
    "@types/uuid": "^9.0.7",
    "ts-node": "^10.9.1",
    "tsx": "^4.6.0",
    "typescript": "^5.2.2"
  }
}
